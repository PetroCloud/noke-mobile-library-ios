// Objective-C API for talking to go-noke-mobile/go Go package.
//   gobind -lang=objc go-noke-mobile/go
//
// File is generated by gobind. Do not edit.

#ifndef __Nokego_H__
#define __Nokego_H__

@import Foundation;
#include "Universe.objc.h"


@protocol NokegoUploadCallback;
@class NokegoUploadCallback;

@protocol NokegoUploadCallback <NSObject>
- (void)receivedUploadError:(NSString*)err;
- (void)receivedUploadResponse:(NSString*)json;
@end

@interface Nokego : NSObject
// skipped variable Rcon with unsupported type: *types.Array

@end

// skipped function DecodeFromBytes with unsupported parameter or return types


/**
 * Decrypt decrypts data received from lock
 */
FOUNDATION_EXPORT NSString* NokegoDecrypt(NSString* data, NSString* key);

// skipped function EncodeToString with unsupported parameter or return types


/**
 * Encrypt encrypts data to be sent to lock
 */
FOUNDATION_EXPORT NSString* NokegoEncrypt(NSString* data, NSString* key);

/**
 * OfflineUnlock returns encrypted offline command
 */
FOUNDATION_EXPORT void NokegoOfflineUnlock(NSString* session, NSString* offlinekey, NSString* unlockcommand, NSString* timestamp);

/**
 * UploadData uploads responses from lock to upload endpoint
 */
FOUNDATION_EXPORT void NokegoUploadData(NSString* jsonString, NSString* uploadURL, id<NokegoUploadCallback> callback, NSString* apikey);

@class NokegoUploadCallback;

/**
 * UploadCallback provides upload callback methods for swift/java class
 */
@interface NokegoUploadCallback : NSObject <goSeqRefInterface, NokegoUploadCallback> {
}
@property(strong, readonly) id _ref;

- (instancetype)initWithRef:(id)ref;
- (void)receivedUploadError:(NSString*)err;
- (void)receivedUploadResponse:(NSString*)json;
@end

#endif
